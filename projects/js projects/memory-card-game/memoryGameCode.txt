html

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Memory game</title>
    <link rel="stylesheet" href="./style.css">
</head>
<body>

   
    
    <section class="memory-game">
        
        
        <div class="memory-card" data-framework="aurelia">
            <img class="front-face" src="../memory-card-game/img-project/aurelia.svg " alt="Aurelia">
            <img class="back-face" src="../memory-card-game/img-project/js-badge.svg" alt="Aurelia">
        </div>
        <div class="memory-card" data-framework="aurelia">
            <img class="front-face" src="../memory-card-game/img-project/aurelia.svg " alt="Aurelia">
            <img class="back-face" src="../memory-card-game/img-project/js-badge.svg" alt="Aurelia">
        </div>
        <div class="memory-card" data-framework="angular">
            <img class="front-face" src="../memory-card-game/img-project/angular.svg " alt="angular">
            <img class="back-face" src="../memory-card-game/img-project/js-badge.svg" alt="angular">
        </div>
        <div class="memory-card" data-framework="angular">
            <img class="front-face" src="../memory-card-game/img-project/angular.svg " alt="angular">
            <img class="back-face" src="../memory-card-game/img-project/js-badge.svg" alt="angular">
        </div>
        <div class="memory-card" data-framework="backbone">
            <img class="front-face" src="../memory-card-game/img-project/backbone.svg " alt="backbone">
            <img class="back-face" src="../memory-card-game/img-project/js-badge.svg" alt="backbone">
        </div>
        <div class="memory-card" data-framework="backbone">
            <img class="front-face" src="../memory-card-game/img-project/backbone.svg " alt="backbone">
            <img class="back-face" src="../memory-card-game/img-project/js-badge.svg" alt="backbone">
        </div>
        <div class="memory-card" data-framework="ember">
            <img class="front-face" src="../memory-card-game/img-project/ember.svg " alt="ember">
            <img class="back-face" src="../memory-card-game/img-project/js-badge.svg " alt="ember">
        </div>
        <div class="memory-card" data-framework="ember">
            <img class="front-face" src="../memory-card-game/img-project/ember.svg " alt="ember">
            <img class="back-face" src="../memory-card-game/img-project/js-badge.svg " alt="ember">
        </div>
        
        <div class="memory-card" data-framework="react">
            <img class="front-face" src="../memory-card-game/img-project/react.svg " alt="react">
            <img class="back-face" src="../memory-card-game/img-project/js-badge.svg" alt="react">
        </div>
        <div class="memory-card" data-framework="react">
            <img class="front-face" src="../memory-card-game/img-project/react.svg " alt="react">
            <img class="back-face" src="../memory-card-game/img-project/js-badge.svg" alt="react">
        </div>
        <div class="memory-card" data-framework="vue">
            <img class="front-face" src="../memory-card-game/img-project/vue.svg " alt="vue">
            <img class="back-face" src="../memory-card-game/img-project/js-badge.svg" alt="vue">
          </div>
        <div class="memory-card" data-framework="vue">
            <img class="front-face" src="../memory-card-game/img-project/vue.svg " alt="vue">
            <img class="back-face" src="../memory-card-game/img-project/js-badge.svg" alt="vue">
        </div>
    </section>


    <script src="./script.js"></script>
</body>
</html>
---------------------------------------------------
css

*{
    padding: 0;
    margin: 0;
    box-sizing: border-box;
}

body{
    height: 100vh;
    background-color: blue;
    display: flex;
   
    
}

section{
    padding-left: 50px;
}

.memory-game{
    width: 640px;
    height: 540px;
    margin: auto;
    display: flex;
    flex-wrap: wrap;
    perspective: 1000px;
    
    
}
.memory-card{
    width:calc(25% - 10px) ;
    height:calc(33.333% - 10px) ;
    margin: 5px;
    position: relative;
    transform:scale(1) ;
    transform-style: preserve-3d;
    transition: transform .5s;
}

.memory-card:active{
    transform: scale(.97);
    transition: transform .2s;
}

.memory-card.flip{
    transform: rotateY(180deg);
}

.front-face, .back-face{
    width: 100%;
    height:  100%;
    padding: 20px;
    position: absolute;
    border-radius: 5px;
    background: #1c7ccc;
    backface-visibility: hidden;
}

.front-face{
    transform: rotateY(180deg);
}

/* רספונסיביות לפלאפונים */
@media (max-width: 600px) {
    .memory-game {
        width: 95vh; /* הלוח יתפוס כמעט את כל רוחב המסך */
        height: 80vh;/* גובה הלוח יהיה שווה לרוחב */

    }

    .memory-card {
        width: calc(50% - 100px); /* 2 קלפים בשורה */
        height: calc(60% - 250px); /* גובה כל קלף יהיה חצי מהגובה */
    }
}

=========================================
script
const cards =document.querySelectorAll('.memory-card')

let hasFlippedCard =false;
lockboard = false;
let firstCard, secondCard;
let matchedCards =0;

function flipCard(){
    if(lockboard) return
    if (this === firstCard)return;
    this.classList.add('flip')

    if (!hasFlippedCard){
        //first click
        hasFlippedCard = true
        firstCard = this;
        return;
        // console.log(hasFlippedCard, firstCard);
        
    }
        //second click
        hasFlippedCard = false ;
        secondCard =this;
        // console.log(firstCard ,secondCard);

        // console.log(firstCard.dataset.framework);
        // console.log(secondCard.dataset.framework);
        checkForMatch();
        // console.log('function was executed!');
        
   
}




function checkForMatch() {
    let isMatch =firstCard.dataset.framework === secondCard.dataset.framework;

    isMatch? disableCards(): unflipCards()
    
}
function disableCards() {
    firstCard.removeEventListener('click', flipCard);
    secondCard.removeEventListener('click', flipCard);

    matchedCards+=2
    checkWin();
    
    resetBoard()
}

function unflipCards() {
    lockboard=true;
    setTimeout(() => {
        firstCard.classList.remove('flip');
        secondCard.classList.remove('flip');
        resetBoard()
    }, 1500);
}

function resetBoard (){
    [hasFlippedCard ,lockboard]=[false,false]
    [firstCard,secondCard]=[null,null]
}
function checkWin(){
    if (matchedCards===cards.length){
        setTimeout(()=> {alert ('הצלחת במשחק')
        location.reload();}
        ,500)
    }
}

(function shuffle (){
    cards.forEach(card =>{
        let randomPos = Math.floor(Math.random()*12);
        card.style.order = randomPos;
    });
})();



cards.forEach(card => card.addEventListener('click',flipCard))